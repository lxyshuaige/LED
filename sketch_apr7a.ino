//连接在点阵板上各引脚的对应关系
#define MTX_R1  7
#define MTX_G1  8
#define MTX_B1  9
#define MTX_R2  10
#define MTX_G2  11
#define MTX_B2  12
#define MTX_CLK 14
#define MTX_LAT 15
#define MTX_OE  16
#define MTX_ADDRA  17
#define MTX_ADDRB  18
#define MTX_ADDRC  19
#define MTX_ADDRD  20


typedef unsigned char u8;

u8 color=0;//颜色，0/1/2对应r/g/b
u8 bright=2;//亮度
u8 X=0;//当前显示的点的X坐标
u8 Y=0;//当前显示的点的Y坐标
u8 lineMode = 0;//行选模式 0为X 1为列
u8 nowRow=X;
u8 centMode=0;//中心校准模式
u8 circleMode=0;

void setup() {
  // put your setup code here, to run once:
  //初始化各输出引脚模式
  pinMode(MTX_CLK,OUTPUT);
  pinMode(MTX_OE,OUTPUT);
  pinMode(MTX_LAT,OUTPUT);
  pinMode(MTX_ADDRA,OUTPUT);
  pinMode(MTX_ADDRB,OUTPUT);
  pinMode(MTX_ADDRC,OUTPUT);
  pinMode(MTX_ADDRD,OUTPUT);
  pinMode(MTX_R1,OUTPUT);
  pinMode(MTX_G1,OUTPUT);
  pinMode(MTX_B1,OUTPUT);
  pinMode(MTX_R2,OUTPUT);
  pinMode(MTX_G2,OUTPUT);
  pinMode(MTX_B2,OUTPUT);

//初始化各引脚电平
  digitalWrite(MTX_CLK,0);
  digitalWrite(MTX_OE,1);
  digitalWrite(MTX_LAT,0);
  digitalWrite(MTX_ADDRA,0);
  digitalWrite(MTX_ADDRB,0);
  digitalWrite(MTX_ADDRC,0);
  digitalWrite(MTX_ADDRD,0);
  digitalWrite(MTX_R1,0);
  digitalWrite(MTX_G1,0);
  digitalWrite(MTX_B1,0);
  digitalWrite(MTX_R2,0);
  digitalWrite(MTX_G2,0);
  digitalWrite(MTX_B2,0);

  //设置串口波特率9600
  Serial.begin(9600);
}

//向LED点阵传输一个字节
//点阵上下两部分需同时传输，此函数两个参数分别送入点阵两个部分
//传输时序与SPI相似，两部分的每个颜色分别对应一个数据引脚(共6个)，共用一个时钟引脚
void sendByte(u8 r1,u8 r2)
{
  digitalWrite(MTX_CLK,1);
  for(int i=0;i<8;i++)//将数据由高位开始逐位移出
  {
    if(color==0)//输出为红色数据
    {
      digitalWrite(MTX_R1,r1&0x80);//将对应电平设置为数据最高位
      r1<<=1;//数据左移，将下一位放在最高位
      digitalWrite(MTX_R2,r2&0x80);
      r2<<=1;
    }
    if(color==1)//输出为绿色数据
    {
      digitalWrite(MTX_G1,r1&0x80);
      r1<<=1;
      digitalWrite(MTX_G2,r2&0x80);
      r2<<=1;
    }
    if(color==2)//输出为蓝色数据
    {
      digitalWrite(MTX_B1,r1&0x80);
      r1<<=1;
      digitalWrite(MTX_B2,r2&0x80);
      r2<<=1;
    }
    digitalWrite(MTX_CLK,0);//在时钟引脚产生一个低脉冲，移入一位数据
    digitalWrite(MTX_CLK,1);
  }
}

//行选，通过ABCD四个引脚选择当前要显示的引脚
//ABCD四位共可产生16种行选，会同时选中row和row+16两行
void selectRow(u8 row)
{
  digitalWrite(MTX_ADDRA,row&0x01);
  digitalWrite(MTX_ADDRB,row&0x02);
  digitalWrite(MTX_ADDRC,row&0x04);
  digitalWrite(MTX_ADDRD,row&0x08);
}

//向点阵发送整行数据
//参数为需要同时传送的x行和x+16行的两行数据，每行共32位
void sendRows(u8 row1[4],u8 row2[4])
{
  digitalWrite(MTX_OE,1);//传送前关闭显示，避免鬼影
  for(u8 i=0;i<4;i++)//调用单个字节的发送函数依次发完整行数据
  {
    sendByte(row1[i],row2[i]);
  }
  digitalWrite(MTX_LAT,1);//在锁存引脚产生一个高脉冲，锁存传入的数据
  digitalWrite(MTX_LAT,0);
  digitalWrite(MTX_OE,0);//使能显示
}

//清空点阵内部当前的数据
//相当于调用sendRows送入一整行空数据
void clearBuff()
{
  digitalWrite(MTX_OE,1);
  for(u8 i=0;i<8;i++)
    sendByte(0x00,0x00);
  digitalWrite(MTX_LAT,1);
  digitalWrite(MTX_LAT,0);
  digitalWrite(MTX_OE,0);
}
//点亮行
void lightRow()
{

  for(u8 i=0;i<=8;i++)//i从0到8递增，若i比bright小则点亮，否则熄灭，实现模拟PWM
  {
    nowRow=(nowRow==X)?((X%16==0)?(X+1):(X-1)):X;//让nowRow在X和其他某一行之间来回切换，否则不会持续点亮
    u8 rs[2][4]={{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
    selectRow(nowRow);//行选第nowRow行
    if(nowRow==X&&i<bright)//满足点亮条件
    {
      for(u8 k=0;k<4;k++)
      {
        rs[X/16][k]=0xFF;
      }
      sendRows(rs[0],rs[1]);
      delayMicroseconds(100);
      digitalWrite(MTX_OE,1);
    }
  }

}

//点亮列
void lightCol()
{

  for(u8 i=0;i<=16;i++)//
  {
    nowRow=(nowRow==X)?((X%16==0)?(X+1):(X-1)):X;//让nowRow在X和其他某一行之间来回切换，否则不会持续点亮
    nowRow=i;
    u8 rs[2][4]={{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
    selectRow(nowRow);//行选第nowRow行

    rs[0][X/8]=0x80>>(Y%8);
    rs[1][X/8]=0x80>>(Y%8);
    sendRows(rs[0],rs[1]);
    delayMicroseconds(100);
    digitalWrite(MTX_OE,1);
  }

}

void circleSend(u8 array[32][4])
{
  for(u8 i=0;i<16;i++)//i从0到8递增，若i比bright小则点亮，否则熄灭，实现模拟PWM
  {
    nowRow=(nowRow==X)?((X%16==0)?(X+1):(X-1)):X;//让nowRow在X和其他某一行之间来回切换，否则不会持续点亮
    X = i;
    nowRow = i;
    u8 rs[2][4]={{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
    selectRow(nowRow);//行选第nowRow行
    if(nowRow==X)//满足点亮条件
    {
      for(u8 j=0;j<4;j++)
      {
        rs[0][j]=array[i][j];
        rs[1][j]=array[i+16][j];
      }
      sendRows(rs[0],rs[1]);
      delayMicroseconds(100);
      digitalWrite(MTX_OE,1);
    }
  }
}

//处理串口数据，串口协议有以下几种数据帧
//2字节坐标数据，x坐标和y坐标，取值[0,31]
//1字节颜色数据，64/65/66对应r/g/b
//1字节亮度数据，67-75对应亮度等级0-8
//1字节半圆数据，76-79对应半圆上下左右
//1字节校准模式切换，每收到一次80切换一次模式
void processSerial()
{
  while(!Serial.available());
  u8 x=Serial.read();//获取收到的第一个字节
  if(x>=32&&x<64) return;//去除不合法情况
  if(x>=64&&x<=66)//判定为颜色数据
  {
    color=x-64;
    return;
  }
  else if(x>=67&&x<=75)//判定为亮度数据
  {
    bright=x-67;
    return;
  }
  else if(x>=76&&x<=87){//判定为半圆点阵模式
    circleMode=x-76;
    return;
  }
  else if(x>=88)
  {
    if(x==88)//判定为模式切换数据
    {
      centMode++;
      if(centMode>7) centMode=0;
    }
    return;
  }
  //x为0-31，表示是坐标数据
  while(!Serial.available());
  Y=Serial.read();//读取下一个数据作为Y坐标
  X=x;//保存X坐标到全局变量
  
}


void loop() {
  // put your main code here, to run repeatedly: 

  if(Serial.available())//若收到串口数据则进入处理
    processSerial();

  if(centMode==3)//中心校准模式3，在指定坐标周围显示四个点
  {
    if(X>0&&X<31&&Y>0&&Y<31)
    {
      selectRow(X-1);
      u8 rs1[2][4]={{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
      rs1[(X-1)/16][Y/8]=0x80>>(Y%8);//写入点(X-1,Y)
      sendRows(rs1[0],rs1[1]);//这句话里会开启显示
      delayMicroseconds(100);//等待100us
      digitalWrite(MTX_OE,1);//关闭显示，避免鬼影

      selectRow(X);//选中第X行(实际选择了X%16和X%16+16两行)
      u8 rs2[2][4]={{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
      rs2[X/16][(Y-1)/8]|=0x80>>((Y-1)%8);//写入点(X,Y-1)
      rs2[X/16][(Y+1)/8]|=0x80>>((Y+1)%8);//写入点(X,Y+1)
      sendRows(rs2[0],rs2[1]);
      delayMicroseconds(100);
      digitalWrite(MTX_OE,1);
    
      selectRow(X+1);
      u8 rs3[2][4]={{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
      rs3[(X+1)/16][Y/8]=0x80>>(Y%8);//写入点(X+1,Y)
      sendRows(rs3[0],rs3[1]);
      delayMicroseconds(100);
      digitalWrite(MTX_OE,1);
    }

  }
  if(centMode==2)//中心校准模式2，显示指定坐标左右两个点
  {
    if(X>0&&X<31&&Y>0&&Y<31)
    {
      selectRow(X-1);
      u8 rs1[2][4]={{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
      rs1[(X-1)/16][Y/8]=0x80>>(Y%8);//写入点(X-1,Y)
      sendRows(rs1[0],rs1[1]);
      delayMicroseconds(100);
      digitalWrite(MTX_OE,1);

      selectRow(X);
      u8 rs2[2][4]={{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
      sendRows(rs2[0],rs2[1]);//这句没有写入任何点，这几行代码没有作用
      delayMicroseconds(10);
      digitalWrite(MTX_OE,1);
    
      selectRow(X+1);
      u8 rs3[2][4]={{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
      rs3[(X+1)/16][Y/8]=0x80>>(Y%8);//写入点(X+1,Y)
      sendRows(rs3[0],rs3[1]);
      delayMicroseconds(100);
      digitalWrite(MTX_OE,1);
    }

  }
  else if(centMode==1)//中心校准模式1，显示指定坐标上下两个点
  {
    if(X>0&&X<31&&Y>0&&Y<31)
    {
      selectRow(X);
      u8 rs1[2][4]={{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
      rs1[X/16][(Y-1)/8]|=0x80>>((Y-1)%8);//写入点(X,Y-1)
      rs1[X/16][(Y+1)/8]|=0x80>>((Y+1)%8);//写入点(X,Y+1)
      sendRows(rs1[0],rs1[1]);
      delayMicroseconds(100);
      digitalWrite(MTX_OE,1);

      selectRow(X+1);
      u8 rs2[2][4]={{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
      sendRows(rs2[0],rs2[1]);//这句没有写入任何值，只为切换一下行选，否则不会持续点亮
      delayMicroseconds(10);
      digitalWrite(MTX_OE,1);
    }

  }
  else if(centMode==0)//正常模式，按指定坐标、指定颜色、指定亮度显示一个点
  {
    for(u8 i=0;i<=8;i++)//i从0到8递增，若i比bright小则点亮，否则熄灭，实现模拟PWM
    {
      nowRow=(nowRow==X)?((X%16==0)?(X+1):(X-1)):X;//让nowRow在X和其他某一行之间来回切换，否则不会持续点亮
      u8 rs[2][4]={{0x00,0x00,0x00,0x00},{0x00,0x00,0x00,0x00}};
      selectRow(nowRow);//行选第nowRow行
      if(nowRow==X&&i<bright)//满足点亮条件
      {
        rs[X/16][Y/8]=0x80>>(Y%8);//写入点(X,Y);
        sendRows(rs[0],rs[1]);
        delayMicroseconds(100);
        digitalWrite(MTX_OE,1);
      }
      else//不满足点亮条件，发送空数据，关闭该点
      {
        rs[X/16][Y/8]=0x00>>(Y%8);
        sendRows(rs[0],rs[1]);
        delayMicroseconds(100);
      }
    }
  }
  else if(centMode==4)//全点亮
  {
    for(u8 i=0;i<16;i++)//i从0到8递增，若i比bright小则点亮，否则熄灭，实现模拟PWM
    {
      nowRow=(nowRow==X)?0:X;//让nowRow在X和其他某一行之间来回切换，否则不会持续点亮
      nowRow = i;
      X = i;
      u8 rs[2][4]={{0xFF,0xFF,0xFF,0xFF},{0xFF,0xFF,0xFF,0xFF}};
      selectRow(nowRow);//行选第nowRow行
      if(nowRow==X)//满足点亮条件
      {
        sendRows(rs[0],rs[1]);
        delayMicroseconds(100);
        digitalWrite(MTX_OE,1);
      }
    }
  }
  else if(centMode==5)
  {
      lightRow();
  }
  else if(centMode==6)
  {
      lightCol();
  }
  else if(centMode==7)
  {
    if(circleMode == 0)
    {
        unsigned char array0[32][4] = {
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x07, 0xE0, 0x00 },
            { 0x00, 0x3F, 0xFC, 0x00 },
            { 0x00, 0xFF, 0xFF, 0x00 },
            { 0x01, 0xFF, 0xFF, 0x80 },
            { 0x03, 0xFF, 0xFF, 0xC0 },
            { 0x03, 0xFF, 0xFF, 0xC0 },
            { 0x07, 0xFF, 0xFF, 0xE0 },
            { 0x07, 0xFF, 0xFF, 0xE0 },
            { 0x07, 0xFF, 0xFF, 0xE0 },
            { 0x0F, 0xFF, 0xFF, 0xF0 },
            { 0x0F, 0xFF, 0xFF, 0xF0 },
            { 0x0F, 0xFF, 0xFF, 0xF0 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }
          };
          circleSend(array0);
    }
    if(circleMode == 1)
    {
        unsigned char array1[32][4] = {
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x07, 0x00, 0x00 },
            { 0x00, 0x3F, 0x00, 0x00 },
            { 0x00, 0xFF, 0x00, 0x00 },
            { 0x01, 0xFF, 0x00, 0x00 },
            { 0x03, 0xFF, 0x00, 0x00 },
            { 0x03, 0xFF, 0x00, 0x00 },
            { 0x07, 0xFF, 0x00, 0x00 },
            { 0x07, 0xFF, 0x00, 0x00 },
            { 0x07, 0xFF, 0x00, 0x00 },
            { 0x0F, 0xFF, 0x00, 0x00 },
            { 0x0F, 0xFF, 0x00, 0x00 },
            { 0x0F, 0xFF, 0x00, 0x00 },
            { 0x0F, 0xFF, 0x00, 0x00 },
            { 0x0F, 0xFF, 0x00, 0x00 },
            { 0x0F, 0xFF, 0x00, 0x00 },
            { 0x07, 0xFF, 0x00, 0x00 },
            { 0x07, 0xFF, 0x00, 0x00 },
            { 0x07, 0xFF, 0x00, 0x00 },
            { 0x03, 0xFF, 0x00, 0x00 },
            { 0x03, 0xFF, 0x00, 0x00 },
            { 0x01, 0xFF, 0x00, 0x00 },
            { 0x00, 0xFF, 0x00, 0x00 },
            { 0x00, 0x3F, 0x00, 0x00 },
            { 0x00, 0x07, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }
          };
          circleSend(array1);
    }

    if(circleMode == 2)
    {
        unsigned char array2[32][4] = {
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x0F, 0xFF, 0xFF, 0xF0 },
            { 0x0F, 0xFF, 0xFF, 0xF0 },
            { 0x0F, 0xFF, 0xFF, 0xF0 },
            { 0x07, 0xFF, 0xFF, 0xE0 },
            { 0x07, 0xFF, 0xFF, 0xE0 },
            { 0x07, 0xFF, 0xFF, 0xE0 },
            { 0x03, 0xFF, 0xFF, 0xC0 },
            { 0x03, 0xFF, 0xFF, 0xC0 },
            { 0x01, 0xFF, 0xFF, 0x80 },
            { 0x00, 0xFF, 0xFF, 0x00 },
            { 0x00, 0x3F, 0xFC, 0x00 },
            { 0x00, 0x07, 0xE0, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }
          };
          circleSend(array2);
    }
    if(circleMode == 3)
    {
        unsigned char array3[32][4] = {
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0xE0, 0x00 },
            { 0x00, 0x00, 0xFC, 0x00 },
            { 0x00, 0x00, 0xFF, 0x00 },
            { 0x00, 0x00, 0xFF, 0x80 },
            { 0x00, 0x00, 0xFF, 0xC0 },
            { 0x00, 0x00, 0xFF, 0xC0 },
            { 0x00, 0x00, 0xFF, 0xE0 },
            { 0x00, 0x00, 0xFF, 0xE0 },
            { 0x00, 0x00, 0xFF, 0xE0 },
            { 0x00, 0x00, 0xFF, 0xF0 },
            { 0x00, 0x00, 0xFF, 0xF0 },
            { 0x00, 0x00, 0xFF, 0xF0 },
            { 0x00, 0x00, 0xFF, 0xF0 },
            { 0x00, 0x00, 0xFF, 0xF0 },
            { 0x00, 0x00, 0xFF, 0xF0 },
            { 0x00, 0x00, 0xFF, 0xE0 },
            { 0x00, 0x00, 0xFF, 0xE0 },
            { 0x00, 0x00, 0xFF, 0xE0 },
            { 0x00, 0x00, 0xFF, 0xC0 },
            { 0x00, 0x00, 0xFF, 0xC0 },
            { 0x00, 0x00, 0xFF, 0x80 },
            { 0x00, 0x00, 0xFF, 0x00 },
            { 0x00, 0x00, 0xFC, 0x00 },
            { 0x00, 0x00, 0xE0, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }
          };
          circleSend(array3);
    }
    if(circleMode == 4)
    {
        unsigned char array4[32][4] = {
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x07, 0xE0, 0x00 }, 
            { 0x00, 0x1F, 0xF8, 0x00 }, 
            { 0x00, 0x7F, 0xFE, 0x00 }, 
            { 0x00, 0xFF, 0xFF, 0x00 }, 
            { 0x00, 0xFF, 0xFF, 0x00 }, 
            { 0x01, 0xFF, 0xFF, 0x80 }, 
            { 0x01, 0xFF, 0xFF, 0x80 }, 
            { 0x03, 0xFF, 0xFF, 0xC0 }, 
            { 0x03, 0xFF, 0xFF, 0xC0 }, 
            { 0x03, 0xFF, 0xFF, 0xC0 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }
          };
          circleSend(array4);
    }
  
  if(circleMode == 5)
    {
        unsigned char array5[32][4] = {
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x07, 0x00, 0x00 },
            { 0x00, 0x1F, 0x00, 0x00 },
            { 0x00, 0x7F, 0x00, 0x00 },
            { 0x00, 0xFF, 0x00, 0x00 },
            { 0x00, 0xFF, 0x00, 0x00 },
            { 0x01, 0xFF, 0x00, 0x00 },
            { 0x01, 0xFF, 0x00, 0x00 },
            { 0x03, 0xFF, 0x00, 0x00 },
            { 0x03, 0xFF, 0x00, 0x00 },
            { 0x03, 0xFF, 0x00, 0x00 },
            { 0x03, 0xFF, 0x00, 0x00 },
            { 0x03, 0xFF, 0x00, 0x00 },
            { 0x03, 0xFF, 0x00, 0x00 },
            { 0x01, 0xFF, 0x00, 0x00 },
            { 0x01, 0xFF, 0x00, 0x00 },
            { 0x00, 0xFF, 0x00, 0x00 },
            { 0x00, 0xFF, 0x00, 0x00 },
            { 0x00, 0x7F, 0x00, 0x00 },
            { 0x00, 0x1F, 0x00, 0x00 },
            { 0x00, 0x07, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }



          };
          circleSend(array5);
    }
  
  if(circleMode == 6)
    {
        unsigned char array6[32][4] = {
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
         	  { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
        	  { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x03, 0xFF, 0xFF, 0xC0 }, 
            { 0x03, 0xFF, 0xFF, 0xC0 }, 
            { 0x03, 0xFF, 0xFF, 0xC0 },
            { 0x01, 0xFF, 0xFF, 0x80 }, 
            { 0x01, 0xFF, 0xFF, 0x80 },
            { 0x00, 0xFF, 0xFF, 0x00 }, 
            { 0x00, 0xFF, 0xFF, 0x00 }, 
            { 0x00, 0x7F, 0xFE, 0x00 }, 
            { 0x00, 0x1F, 0xF8, 0x00 }, 
            { 0x00, 0x07, 0xE0, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }


          };
          circleSend(array6);
    }
  
  if(circleMode == 7)
    {
        unsigned char array7[32][4] = {
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0xE0, 0x00 },
            { 0x00, 0x00, 0xF8, 0x00 },
            { 0x00, 0x00, 0xFE, 0x00 },
            { 0x00, 0x00, 0xFF, 0x00 },
            { 0x00, 0x00, 0xFF, 0x00 },
            { 0x00, 0x00, 0xFF, 0x80 },
            { 0x00, 0x00, 0xFF, 0x80 },
            { 0x00, 0x00, 0xFF, 0xC0 },
            { 0x00, 0x00, 0xFF, 0xC0 },
            { 0x00, 0x00, 0xFF, 0xC0 },
            { 0x00, 0x00, 0xFF, 0xC0 },
            { 0x00, 0x00, 0xFF, 0xC0 },
            { 0x00, 0x00, 0xFF, 0xC0 },
            { 0x00, 0x00, 0xFF, 0x80 },
            { 0x00, 0x00, 0xFF, 0x80 },
            { 0x00, 0x00, 0xFF, 0x00 },
            { 0x00, 0x00, 0xFF, 0x00 },
            { 0x00, 0x00, 0xFE, 0x00 },
            { 0x00, 0x00, 0xF8, 0x00 },
            { 0x00, 0x00, 0xE0, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }


          };
          circleSend(array7);
    }
  
  if(circleMode == 8)
    {
        unsigned char array8[32][4] = {
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x03, 0xC0, 0x00 }, 
            { 0x00, 0x0F, 0xF0, 0x00 }, 
            { 0x00, 0x1F, 0xF8, 0x00 }, 
            { 0x00, 0x3F, 0xFC, 0x00 }, 
            { 0x00, 0x7F, 0xFE, 0x00 }, 
            { 0x00, 0x7F, 0xFE, 0x00 }, 
            { 0x00, 0xFF, 0xFF, 0x00 }, 
            { 0x00, 0xFF, 0xFF, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }


          };
          circleSend(array8);
    }
    if(circleMode == 9)
    {
        unsigned char array9[32][4] = {
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x03, 0x00, 0x00 },
            { 0x00, 0x0F, 0x00, 0x00 },
            { 0x00, 0x1F, 0x00, 0x00 },
            { 0x00, 0x3F, 0x00, 0x00 },
            { 0x00, 0x7F, 0x00, 0x00 },
            { 0x00, 0x7F, 0x00, 0x00 },
            { 0x00, 0xFF, 0x00, 0x00 },
            { 0x00, 0xFF, 0x00, 0x00 },
            { 0x00, 0xFF, 0x00, 0x00 },
            { 0x00, 0xFF, 0x00, 0x00 },
            { 0x00, 0x7F, 0x00, 0x00 },
            { 0x00, 0x7F, 0x00, 0x00 },
            { 0x00, 0x3F, 0x00, 0x00 },
            { 0x00, 0x1F, 0x00, 0x00 },
            { 0x00, 0x0F, 0x00, 0x00 },
            { 0x00, 0x03, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }

          };
          circleSend(array9);
    }
    if(circleMode == 10)
    {
        unsigned char array10[32][4] = {
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0xFF, 0xFF, 0x00 }, 
            { 0x00, 0xFF, 0xFF, 0x00 },
            { 0x00, 0x7F, 0xFE, 0x00 }, 
            { 0x00, 0x7F, 0xFE, 0x00 }, 
            { 0x00, 0x3F, 0xFC, 0x00 }, 
            { 0x00, 0x1F, 0xF8, 0x00 },
            { 0x00, 0x0F, 0xF0, 0x00 }, 
            { 0x00, 0x03, 0xC0, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }, 
            { 0x00, 0x00, 0x00, 0x00 }

          };
          circleSend(array10);
    }
    if(circleMode == 11)
    {
        unsigned char array11[32][4] = {
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0xC0, 0x00 },
            { 0x00, 0x00, 0xF0, 0x00 },
            { 0x00, 0x00, 0xF8, 0x00 },
            { 0x00, 0x00, 0xFC, 0x00 },
            { 0x00, 0x00, 0xFE, 0x00 },
            { 0x00, 0x00, 0xFE, 0x00 },
            { 0x00, 0x00, 0xFF, 0x00 },
            { 0x00, 0x00, 0xFF, 0x00 },
            { 0x00, 0x00, 0xFF, 0x00 },
            { 0x00, 0x00, 0xFF, 0x00 },
            { 0x00, 0x00, 0xFE, 0x00 },
            { 0x00, 0x00, 0xFE, 0x00 },
            { 0x00, 0x00, 0xFC, 0x00 },
            { 0x00, 0x00, 0xF8, 0x00 },
            { 0x00, 0x00, 0xF0, 0x00 },
            { 0x00, 0x00, 0xC0, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00 }
          };
          circleSend(array11);
    }
  }
}


